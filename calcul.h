void returnCardP(setP *Card);
float timeInSeconds(float time);
void selectColor(int *r,int *g,int *b);
void drawPoints(int *drawstate, int *incre);
void saveMouse(int incre, pt **T2, int drawstate);
void saveTime(int incre, float **T2, int drawstate, float times);
void numbersLines(int incre, int *nbline );
void lengthLine(int incre, pt **T2, lgtLine *Pict);
void averageLine(lgtLine *Pict);
void ordinateLine(lgtLine *Pict);
void timeLine(lgtLine *Pict, float **T2);
void timeGlobal(lgtLine *Pict);
void pixels(DonneesImageRGB *image, DonneesImageRGB *imageNB);
void createMatrice(DonneesImageRGB *imageNB, unsigned char **GL, unsigned char **GX ,unsigned char **GY ,unsigned char **GXY, int matriceGrad[LarImg][HauImg], int matriceRad[LarImg][HauImg][Ray], jointure *j);
void pointRadon(int matriceGrad[LarImg][HauImg], int matriceRad[LarImg][HauImg][Ray]);
void barCentre(jointure *j);
void connexion();
void enregistrement();
void etatTxt();
void camera(int *etatcam);
void NbImg (int *nb, int *etatcam);
void recupImage(int nb,DonneesImageRGB *Vid,DonneesImageRGB *VidNB, int *etatcam, unsigned char **GL, unsigned char **GX ,unsigned char **GY ,unsigned char **GXY, int matriceGrad[LarImg][HauImg], int matriceRad[LarImg][HauImg][Ray], jointure *j, FILE*f);
void registerCentre(jointure *j, FILE*f);
void gereJeuLoading(int *etatcam, int *hj);
